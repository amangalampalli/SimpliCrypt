Tell us about the features and technologies you used in your Swift playground.

My Swift playground utilizes UIkit in order to make sure that the playground runs properly on macOS. Due to the program’s command-line-based nature, it has been found to be functional on both iPadOS’s Swift Playgrounds, macOS’s Swift Playgrounds, and Xcode on macOS. However, the main technology used is Swift’s standard math library. Encryption is mainly based on a series of complex mathematical formulas to transform data to make it hard for third parties without the exact values to decrypt. Due to this reason, many mathematical formulas and concepts such as power precedence, prime generation, greatest common denominator, coprimes, and modulo, just to name a few, were used in the making of this playground. While I could have used Python libraries such as NumPy or C++ libraries such as Eigen, Swift’s standard math library seemed to perform the best, most likely due to a lack of overhead processing times. Furthermore, the individual operations had undergone multiple iterations to develop the fastest possible algorithm. Encryption is used when any device that connects to the internet ends up transferring data so all of these devices must perform these mathematical operations and tasks in order to securely transfer data so the algorithm that was developed in Swift was also tested on lower-level devices and microcontrollers to ensure that the experience would be extremely fast. Otherwise, the whole playground is relatively straightforward and extremely easy for the user to understand as he/she is guided through the basics of RSA encryption. In terms of other trivial technologies, PlaygroundSupport along with the Markdown editor was used in order to create the notes for the pages, but other than that, the rest of the content was printed to the console.



If you've shared or considered sharing your coding knowledge and enthusiasm for computer science with others, let us know.

As a proud member of the FIRST Tech Challenge community and an active member of my local STEM community, I have taught over 4,000 students in 12 countries various programming languages and have helped them start from little to no experience to full mastery of said languages. I am thoroughly engrossed in computer science and spend well over 30 hours a week either teaching computer science to other students or working on projects myself. Growing up with very little resources in hand, I had self-taught myself all the languages I know today. I fully understand how difficult it is in order to learn complicated topics without much help. Equipped with these experiences I try my best to help guide others to avoid the pitfalls I faced when I was younger so this is my form of giving back to my community. Furthermore, I spend almost all of my time coding. As of now, I have mainly been focused on the algorithmic side of programming and have slowly transitioned into Machine Learning. Whenever I see people who are currently going through my path of development, I always try to help out and guide them. So far, my lessons are all free with optional donations to charities at the end of each session. As of now, I have raised over $14,000 for various charities and I plan to continue mentoring other students like this for my entire future. Teaching yourself complicated concepts is extremely challenging but yields a very high reward, but it is very easy to get stuck in various pitfalls and I hope to help all these other learners. Furthermore, I have also helped create my school AP Computer Science curriculum and have increased my school’s computer science course and activity participation by 150%. My leadership positions in clubs such as Technology & Robotics, Computer Science, and more, have actively improved the outreach of Computer Science programs and have presented students with many more newer opportunities that were not available to them in the past.



If you have one or more apps on the App Store created entirely by you as an individual, tell us about them. This will not influence the selection process.

Due to my family’s previous financial situation, this entire project was written on a second-hand MacBook Pro that I actually earned and bought myself from working very recently. I only had momentary access to other Apple products before I started working part-time with the rest of my family. After that, I had bought my first Apple product and this is one of the first Swift apps that I have ever written. However, I was always interested in front-end design and have worked with other open source technologies such as React and am currently in the process of completing two iOS apps written in React Native that will be published to the App Store around July. One of these apps is a simple neurological conditions screening service that uses eye-movement patterns and inferences the likeliness of a neurological condition that was trained on data that I had collected by working with local professors. The other app is an Artificial Intelligence-powered medical diagnosis assistant to help people diagnose conditions by either answering a few questions, recording videos, or taking pictures of any formations. I hope that my apps have a large outreach and are able to help many people across the world. Due to my recent ownership of an Apple MacBook and my passion for front-end development as well as Machine Learning, I am sure that I will be creating and publishing a lot more apps in the future.



Is there anything else you would like us to know?

From a very young age, winning the WWDC Scholarship/Swift Student Challenge has been a long-term dream of mine that I was not even able to attempt due to my lack of access to Apple products. I have always admired Apple as a company from when I was very young. I still remember watching old iPhone launch recordings and would be mind blown at the innovation that would take place each year. It has been a dream of mine to own one of these products and that has come to me recently. With me recently gaining access to a MacBook Pro, this is my first time attempting to compete in this challenge and I learned a lot while making this playground. Win or lose, I definitely had a lot of fun making this project and I will definitely apply again next year! Thank you all for your time!
